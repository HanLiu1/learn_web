"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDeepEqual = exports.default = void 0;

var _react = require("react");

var _isDeepEqualReact = _interopRequireDefault(require("../../isDeepEqualReact"));

var isDeepEqual = _isDeepEqualReact.default;
exports.isDeepEqual = isDeepEqual;

function useDeepCompareMemoize(value) {
  var ref = (0, _react.useRef)(); // it can be done by using useMemo as well
  // but useRef is rather cleaner and easier

  if (!isDeepEqual(value, ref.current)) {
    ref.current = value;
  }

  return ref.current;
}

function useDeepCompareEffect(effect) {
  var dependencies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  // eslint-disable-next-line react-hooks/exhaustive-deps
  (0, _react.useEffect)(effect, useDeepCompareMemoize(dependencies));
}

var _default = useDeepCompareEffect;
exports.default = _default;