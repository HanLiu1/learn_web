{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\my-app\\\\src\\\\pages\\\\admin\\\\admin.jsx\";\n// 管理的路由组件\nimport React, { Component } from \"react\";\nimport \"./admin.less\";\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport ProForm, { ProFormText } from '@ant-design/pro-form';\nimport { FormattedMessage, useIntl, connect } from 'umi';\nimport styles from './Login.less';\nimport logo from \"../assets/momenta.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Admin extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Momenta\",\n        className: styles.logo,\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: styles.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.title,\n        children: \"Simulation\\u4E91\\u5E73\\u53F0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProForm, {\n        submitter: {\n          render: (_, dom) => dom.pop(),\n          submitButtonProps: {\n            loading: submitting,\n            size: 'large',\n            style: {\n              width: '100%'\n            }\n          }\n        },\n        onFinish: values => {\n          handleSubmit(values);\n          return Promise.resolve();\n        },\n        children: [/*#__PURE__*/_jsxDEV(ProFormText, {\n          name: \"username\",\n          fieldProps: {\n            size: 'large',\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n              className: styles.prefixIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 23\n            }, this)\n          },\n          placeholder: formatMessage({\n            id: 'pages.login.username'\n          }),\n          rules: [{\n            required: true,\n            message: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"pages.login.username.required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 26\n            }, this)\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProFormText.Password, {\n          name: \"password\",\n          fieldProps: {\n            size: 'large',\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n              className: styles.prefixIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 23\n            }, this)\n          },\n          placeholder: formatMessage({\n            id: 'pages.login.password'\n          }),\n          rules: [{\n            required: true,\n            message: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: \"pages.login.password.required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 26\n            }, this)\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/web/my-app/src/pages/admin/admin.jsx"],"names":["React","Component","LockOutlined","UserOutlined","ProForm","ProFormText","FormattedMessage","useIntl","connect","styles","Admin","render","main","logo","divider","title","_","dom","pop","submitButtonProps","loading","submitting","size","style","width","values","handleSubmit","Promise","resolve","prefix","prefixIcon","formatMessage","id","required","message"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;AAEA,OAAOC,OAAP,IAAkBC,WAAlB,QAAqC,sBAArC;AACA,SAASC,gBAAT,EAA2BC,OAA3B,EAAoCC,OAApC,QAAmD,KAAnD;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAQA,MAAMC,KAAN,SAAoBT,SAApB,CAA6B;AACzBU,EAAAA,MAAM,GAAE;AAGR,wBACE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACG,IAAvB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAC,SAAT;AAAmB,QAAA,SAAS,EAAEH,MAAM,CAACI,IAArC;AAA2C,QAAA,GAAG,EAAEA;AAAhD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAEJ,MAAM,CAACK;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAEL,MAAM,CAACM,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,OAAD;AACE,QAAA,SAAS,EAAE;AACTJ,UAAAA,MAAM,EAAE,CAACK,CAAD,EAAIC,GAAJ,KAAYA,GAAG,CAACC,GAAJ,EADX;AAETC,UAAAA,iBAAiB,EAAE;AACjBC,YAAAA,OAAO,EAAEC,UADQ;AAEjBC,YAAAA,IAAI,EAAE,OAFW;AAGjBC,YAAAA,KAAK,EAAE;AACLC,cAAAA,KAAK,EAAE;AADF;AAHU;AAFV,SADb;AAWE,QAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,UAAAA,YAAY,CAACD,MAAD,CAAZ;AACA,iBAAOE,OAAO,CAACC,OAAR,EAAP;AACD,SAdH;AAAA,gCAgBE,QAAC,WAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,UAAU,EAAE;AACVN,YAAAA,IAAI,EAAE,OADI;AAEVO,YAAAA,MAAM,eAAE,QAAC,YAAD;AAAc,cAAA,SAAS,EAAEpB,MAAM,CAACqB;AAAhC;AAAA;AAAA;AAAA;AAAA;AAFE,WAFd;AAME,UAAA,WAAW,EAAEC,aAAa,CAAC;AACzBC,YAAAA,EAAE,EAAE;AADqB,WAAD,CAN5B;AASE,UAAA,KAAK,EAAE,CACL;AACEC,YAAAA,QAAQ,EAAE,IADZ;AAEEC,YAAAA,OAAO,eAAE,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAFX,WADK;AATT;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAgCE,QAAC,WAAD,CAAa,QAAb;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,UAAU,EAAE;AACVZ,YAAAA,IAAI,EAAE,OADI;AAEVO,YAAAA,MAAM,eAAE,QAAC,YAAD;AAAc,cAAA,SAAS,EAAEpB,MAAM,CAACqB;AAAhC;AAAA;AAAA;AAAA;AAAA;AAFE,WAFd;AAME,UAAA,WAAW,EAAEC,aAAa,CAAC;AACzBC,YAAAA,EAAE,EAAE;AADqB,WAAD,CAN5B;AASE,UAAA,KAAK,EAAE,CACL;AACEC,YAAAA,QAAQ,EAAE,IADZ;AAEEC,YAAAA,OAAO,eAAE,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAFX,WADK;AATT;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwDD;;AA5D0B","sourcesContent":["// 管理的路由组件\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./admin.less\"\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nimport ProForm, { ProFormText } from '@ant-design/pro-form';\r\nimport { FormattedMessage, useIntl, connect } from 'umi';\r\nimport styles from './Login.less';\r\nimport logo from '../assets/momenta.svg';\r\n\r\n\r\n\r\n\r\n  \r\n\r\nclass Admin extends Component{\r\n    render(){\r\n        \r\n        \r\n    return (\r\n      <div className={styles.main}>\r\n        <img alt=\"Momenta\" className={styles.logo} src={logo} />\r\n        <hr className={styles.divider} />\r\n        <span className={styles.title}>Simulation云平台</span>\r\n        <ProForm\r\n          submitter={{\r\n            render: (_, dom) => dom.pop(),\r\n            submitButtonProps: {\r\n              loading: submitting,\r\n              size: 'large',\r\n              style: {\r\n                width: '100%',\r\n              },\r\n            },\r\n          }}\r\n          onFinish={(values) => {\r\n            handleSubmit(values);\r\n            return Promise.resolve();\r\n          }}\r\n        >\r\n          <ProFormText\r\n            name=\"username\"\r\n            fieldProps={{\r\n              size: 'large',\r\n              prefix: <UserOutlined className={styles.prefixIcon} />,\r\n            }}\r\n            placeholder={formatMessage({\r\n              id: 'pages.login.username',\r\n            })}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: <FormattedMessage id=\"pages.login.username.required\" />,\r\n              },\r\n            ]}\r\n          />\r\n          <ProFormText.Password\r\n            name=\"password\"\r\n            fieldProps={{\r\n              size: 'large',\r\n              prefix: <LockOutlined className={styles.prefixIcon} />,\r\n            }}\r\n            placeholder={formatMessage({\r\n              id: 'pages.login.password',\r\n            })}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: <FormattedMessage id=\"pages.login.password.required\" />,\r\n              },\r\n            ]}\r\n          />\r\n        </ProForm>\r\n      </div>\r\n    );\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}