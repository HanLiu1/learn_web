{"ast":null,"code":"import \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport React, { useState, useContext } from 'react';\nimport moment from 'moment';\nimport { useIntl } from '@ant-design/pro-provider';\nimport { FieldLabel, parseValueToMoment } from '@ant-design/pro-utils';\nimport './index.less';\n/**\n * 日期选择组件\n *\n * @param\n */\n\nvar FieldDatePicker = function FieldDatePicker(_ref, ref) {\n  var text = _ref.text,\n      mode = _ref.mode,\n      format = _ref.format,\n      label = _ref.label,\n      light = _ref.light,\n      render = _ref.render,\n      renderFormItem = _ref.renderFormItem,\n      plain = _ref.plain,\n      showTime = _ref.showTime,\n      fieldProps = _ref.fieldProps,\n      picker = _ref.picker,\n      bordered = _ref.bordered;\n  var intl = useIntl();\n  var size = useContext(_ConfigProvider.SizeContext);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('pro-field-date-picker');\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  if (mode === 'read') {\n    var dom = text ? moment(text).format(fieldProps.format || format || 'YYYY-MM-DD') : '-';\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: mode\n      }, fieldProps), /*#__PURE__*/React.createElement(React.Fragment, null, dom));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, dom);\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var _dom;\n\n    var disabled = fieldProps.disabled,\n        value = fieldProps.value,\n        _onChange = fieldProps.onChange,\n        allowClear = fieldProps.allowClear,\n        _fieldProps$placehold = fieldProps.placeholder,\n        placeholder = _fieldProps$placehold === void 0 ? intl.getMessage('tableForm.selectPlaceholder', '请选择') : _fieldProps$placehold;\n    var momentValue = parseValueToMoment(value);\n\n    if (light) {\n      var valueStr = momentValue && momentValue.format(format) || '';\n      _dom = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-light\"),\n        onClick: function onClick() {\n          setOpen(true);\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker, _extends({\n        picker: picker,\n        showTime: showTime,\n        format: format,\n        ref: ref\n      }, fieldProps, {\n        value: momentValue,\n        onChange: function onChange(v) {\n          _onChange === null || _onChange === void 0 ? void 0 : _onChange(v);\n          setTimeout(function () {\n            setOpen(false);\n          }, 0);\n        },\n        onOpenChange: setOpen,\n        open: open\n      })), /*#__PURE__*/React.createElement(FieldLabel, {\n        label: label,\n        disabled: disabled,\n        placeholder: placeholder,\n        size: size,\n        value: valueStr,\n        onClear: function onClear() {\n          _onChange === null || _onChange === void 0 ? void 0 : _onChange(null);\n        },\n        allowClear: allowClear,\n        bordered: bordered,\n        expanded: open\n      }));\n    } else {\n      _dom = /*#__PURE__*/React.createElement(_DatePicker, _extends({\n        picker: picker,\n        showTime: showTime,\n        format: format,\n        placeholder: placeholder,\n        bordered: plain === undefined ? true : !plain,\n        ref: ref\n      }, fieldProps, {\n        value: momentValue\n      }));\n    }\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldDatePicker);","map":{"version":3,"sources":["C:/web/my-app/node_modules/@ant-design/pro-field/es/components/DatePicker/index.js"],"names":["_DatePicker","_extends","_objectSpread","_slicedToArray","_ConfigProvider","React","useState","useContext","moment","useIntl","FieldLabel","parseValueToMoment","FieldDatePicker","_ref","ref","text","mode","format","label","light","render","renderFormItem","plain","showTime","fieldProps","picker","bordered","intl","size","SizeContext","_useContext","ConfigContext","getPrefixCls","prefixCls","_useState","_useState2","open","setOpen","dom","createElement","Fragment","_dom","disabled","value","_onChange","onChange","allowClear","_fieldProps$placehold","placeholder","getMessage","momentValue","valueStr","className","concat","onClick","v","setTimeout","onOpenChange","onClear","expanded","undefined","forwardRef"],"mappings":"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","sourcesContent":["import \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport React, { useState, useContext } from 'react';\nimport moment from 'moment';\nimport { useIntl } from '@ant-design/pro-provider';\nimport { FieldLabel, parseValueToMoment } from '@ant-design/pro-utils';\nimport './index.less';\n/**\n * 日期选择组件\n *\n * @param\n */\n\nvar FieldDatePicker = function FieldDatePicker(_ref, ref) {\n  var text = _ref.text,\n      mode = _ref.mode,\n      format = _ref.format,\n      label = _ref.label,\n      light = _ref.light,\n      render = _ref.render,\n      renderFormItem = _ref.renderFormItem,\n      plain = _ref.plain,\n      showTime = _ref.showTime,\n      fieldProps = _ref.fieldProps,\n      picker = _ref.picker,\n      bordered = _ref.bordered;\n  var intl = useIntl();\n  var size = useContext(_ConfigProvider.SizeContext);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('pro-field-date-picker');\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  if (mode === 'read') {\n    var dom = text ? moment(text).format(fieldProps.format || format || 'YYYY-MM-DD') : '-';\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: mode\n      }, fieldProps), /*#__PURE__*/React.createElement(React.Fragment, null, dom));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, dom);\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var _dom;\n\n    var disabled = fieldProps.disabled,\n        value = fieldProps.value,\n        _onChange = fieldProps.onChange,\n        allowClear = fieldProps.allowClear,\n        _fieldProps$placehold = fieldProps.placeholder,\n        placeholder = _fieldProps$placehold === void 0 ? intl.getMessage('tableForm.selectPlaceholder', '请选择') : _fieldProps$placehold;\n    var momentValue = parseValueToMoment(value);\n\n    if (light) {\n      var valueStr = momentValue && momentValue.format(format) || '';\n      _dom = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-light\"),\n        onClick: function onClick() {\n          setOpen(true);\n        }\n      }, /*#__PURE__*/React.createElement(_DatePicker, _extends({\n        picker: picker,\n        showTime: showTime,\n        format: format,\n        ref: ref\n      }, fieldProps, {\n        value: momentValue,\n        onChange: function onChange(v) {\n          _onChange === null || _onChange === void 0 ? void 0 : _onChange(v);\n          setTimeout(function () {\n            setOpen(false);\n          }, 0);\n        },\n        onOpenChange: setOpen,\n        open: open\n      })), /*#__PURE__*/React.createElement(FieldLabel, {\n        label: label,\n        disabled: disabled,\n        placeholder: placeholder,\n        size: size,\n        value: valueStr,\n        onClear: function onClear() {\n          _onChange === null || _onChange === void 0 ? void 0 : _onChange(null);\n        },\n        allowClear: allowClear,\n        bordered: bordered,\n        expanded: open\n      }));\n    } else {\n      _dom = /*#__PURE__*/React.createElement(_DatePicker, _extends({\n        picker: picker,\n        showTime: showTime,\n        format: format,\n        placeholder: placeholder,\n        bordered: plain === undefined ? true : !plain,\n        ref: ref\n      }, fieldProps, {\n        value: momentValue\n      }));\n    }\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n\nexport default /*#__PURE__*/React.forwardRef(FieldDatePicker);"]},"metadata":{},"sourceType":"module"}