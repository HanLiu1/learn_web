{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport isDeepEqualReact from '../../isDeepEqualReact';\nexport var isDeepEqual = isDeepEqualReact;\n\nfunction useDeepCompareMemoize(value) {\n  var ref = useRef(); // it can be done by using useMemo as well\n  // but useRef is rather cleaner and easier\n\n  if (!isDeepEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\nfunction useDeepCompareEffect(effect) {\n  var dependencies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : []; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(effect, useDeepCompareMemoize(dependencies));\n}\n\nexport default useDeepCompareEffect;","map":{"version":3,"sources":["C:/web/my-app/node_modules/@ant-design/pro-utils/es/hooks/useDeepCompareEffect/index.js"],"names":["useEffect","useRef","isDeepEqualReact","isDeepEqual","useDeepCompareMemoize","value","ref","current","useDeepCompareEffect","effect","dependencies","arguments","length","undefined"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,OAAO,IAAIC,WAAW,GAAGD,gBAAlB;;AAEP,SAASE,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,MAAIC,GAAG,GAAGL,MAAM,EAAhB,CADoC,CAChB;AACpB;;AAEA,MAAI,CAACE,WAAW,CAACE,KAAD,EAAQC,GAAG,CAACC,OAAZ,CAAhB,EAAsC;AACpCD,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACD;;AAED,SAAOC,GAAG,CAACC,OAAX;AACD;;AAED,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AACpC,MAAIC,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAvF,CADoC,CAEpC;;AACAX,EAAAA,SAAS,CAACS,MAAD,EAASL,qBAAqB,CAACM,YAAD,CAA9B,CAAT;AACD;;AAED,eAAeF,oBAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nimport isDeepEqualReact from '../../isDeepEqualReact';\nexport var isDeepEqual = isDeepEqualReact;\n\nfunction useDeepCompareMemoize(value) {\n  var ref = useRef(); // it can be done by using useMemo as well\n  // but useRef is rather cleaner and easier\n\n  if (!isDeepEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\nfunction useDeepCompareEffect(effect) {\n  var dependencies = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(effect, useDeepCompareMemoize(dependencies));\n}\n\nexport default useDeepCompareEffect;"]},"metadata":{},"sourceType":"module"}