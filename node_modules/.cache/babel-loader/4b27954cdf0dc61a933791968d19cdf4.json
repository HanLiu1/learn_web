{"ast":null,"code":"import \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/time-picker/style\";\nimport _TimePicker from \"antd/es/time-picker\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport moment from 'moment';\nimport { FieldLabel, parseValueToMoment } from '@ant-design/pro-utils';\n/**\n * 日期选择组件\n *\n * @param\n */\n\nvar FieldTimePicker = function FieldTimePicker(_ref, ref) {\n  var text = _ref.text,\n      mode = _ref.mode,\n      light = _ref.light,\n      label = _ref.label,\n      format = _ref.format,\n      render = _ref.render,\n      renderFormItem = _ref.renderFormItem,\n      plain = _ref.plain,\n      fieldProps = _ref.fieldProps;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var size = useContext(_ConfigProvider.SizeContext);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('pro-field-date-picker');\n  var finalFormat = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || 'HH:mm:ss';\n  var isNumberOrMoment = moment.isMoment(text) || typeof text === 'number';\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(\"span\", {\n      ref: ref\n    }, text ? moment(text, isNumberOrMoment ? undefined : finalFormat).format(finalFormat) : '-');\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: mode\n      }, fieldProps), /*#__PURE__*/React.createElement(\"span\", null, dom));\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var _dom;\n\n    var disabled = fieldProps.disabled,\n        _onChange = fieldProps.onChange,\n        placeholder = fieldProps.placeholder,\n        allowClear = fieldProps.allowClear,\n        value = fieldProps.value;\n    var momentValue = parseValueToMoment(value, finalFormat);\n\n    if (light) {\n      var valueStr = momentValue && momentValue.format(finalFormat) || '';\n      _dom = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-light\"),\n        onClick: function onClick() {\n          setOpen(true);\n        }\n      }, /*#__PURE__*/React.createElement(_TimePicker, _extends({\n        value: momentValue,\n        format: format,\n        ref: ref\n      }, fieldProps, {\n        onChange: function onChange(v) {\n          _onChange === null || _onChange === void 0 ? void 0 : _onChange(v);\n          setTimeout(function () {\n            setOpen(false);\n          }, 0);\n        },\n        onOpenChange: setOpen,\n        open: open\n      })), /*#__PURE__*/React.createElement(FieldLabel, {\n        label: label,\n        disabled: disabled,\n        placeholder: placeholder,\n        size: size,\n        value: valueStr,\n        allowClear: allowClear,\n        onClear: function onClear() {\n          _onChange === null || _onChange === void 0 ? void 0 : _onChange(null);\n        },\n        expanded: open\n      }));\n    } else {\n      _dom = /*#__PURE__*/React.createElement(_DatePicker.TimePicker, _extends({\n        ref: ref,\n        format: format,\n        bordered: plain === undefined ? true : !plain\n      }, fieldProps, {\n        value: momentValue\n      }));\n    }\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n/**\n * 时间区间选择\n *\n * @param param0\n * @param ref\n */\n\n\nvar FieldTimeRangePicker = function FieldTimeRangePicker(_ref2) {\n  var text = _ref2.text,\n      mode = _ref2.mode,\n      format = _ref2.format,\n      render = _ref2.render,\n      renderFormItem = _ref2.renderFormItem,\n      plain = _ref2.plain,\n      fieldProps = _ref2.fieldProps;\n\n  var _ref3 = Array.isArray(text) ? text : [],\n      _ref4 = _slicedToArray(_ref3, 2),\n      startText = _ref4[0],\n      endText = _ref4[1];\n\n  var parsedStartText = startText ? moment(startText).format((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || 'YYYY-MM-DD') : '';\n  var parsedEndText = endText ? moment(endText).format((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || 'YYYY-MM-DD') : '';\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", null, parsedStartText || '-'), /*#__PURE__*/React.createElement(\"div\", null, parsedEndText || '-'));\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: mode\n      }, fieldProps), /*#__PURE__*/React.createElement(\"span\", null, dom));\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var value = fieldProps.value;\n    var momentValue = parseValueToMoment(value);\n\n    var _dom2 = /*#__PURE__*/React.createElement(_TimePicker.RangePicker, _extends({\n      format: format,\n      bordered: plain === undefined ? true : !plain\n    }, fieldProps, {\n      value: momentValue\n    }));\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom2);\n    }\n\n    return _dom2;\n  }\n\n  return null;\n};\n\nexport { FieldTimeRangePicker };\nexport default /*#__PURE__*/React.forwardRef(FieldTimePicker);","map":{"version":3,"sources":["C:/web/my-app/node_modules/@ant-design/pro-field/es/components/TimePicker/index.js"],"names":["_DatePicker","_TimePicker","_extends","_objectSpread","_ConfigProvider","_slicedToArray","React","useState","useContext","moment","FieldLabel","parseValueToMoment","FieldTimePicker","_ref","ref","text","mode","light","label","format","render","renderFormItem","plain","fieldProps","_useState","_useState2","open","setOpen","size","SizeContext","_useContext","ConfigContext","getPrefixCls","prefixCls","finalFormat","isNumberOrMoment","isMoment","dom","createElement","undefined","_dom","disabled","_onChange","onChange","placeholder","allowClear","value","momentValue","valueStr","className","concat","onClick","v","setTimeout","onOpenChange","onClear","expanded","TimePicker","bordered","FieldTimeRangePicker","_ref2","_ref3","Array","isArray","_ref4","startText","endText","parsedStartText","parsedEndText","_dom2","RangePicker","forwardRef"],"mappings":"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","sourcesContent":["import \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/time-picker/style\";\nimport _TimePicker from \"antd/es/time-picker\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/config-provider/style\";\nimport _ConfigProvider from \"antd/es/config-provider\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport moment from 'moment';\nimport { FieldLabel, parseValueToMoment } from '@ant-design/pro-utils';\n/**\n * 日期选择组件\n *\n * @param\n */\n\nvar FieldTimePicker = function FieldTimePicker(_ref, ref) {\n  var text = _ref.text,\n      mode = _ref.mode,\n      light = _ref.light,\n      label = _ref.label,\n      format = _ref.format,\n      render = _ref.render,\n      renderFormItem = _ref.renderFormItem,\n      plain = _ref.plain,\n      fieldProps = _ref.fieldProps;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var size = useContext(_ConfigProvider.SizeContext);\n\n  var _useContext = useContext(_ConfigProvider.ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('pro-field-date-picker');\n  var finalFormat = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || 'HH:mm:ss';\n  var isNumberOrMoment = moment.isMoment(text) || typeof text === 'number';\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(\"span\", {\n      ref: ref\n    }, text ? moment(text, isNumberOrMoment ? undefined : finalFormat).format(finalFormat) : '-');\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: mode\n      }, fieldProps), /*#__PURE__*/React.createElement(\"span\", null, dom));\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var _dom;\n\n    var disabled = fieldProps.disabled,\n        _onChange = fieldProps.onChange,\n        placeholder = fieldProps.placeholder,\n        allowClear = fieldProps.allowClear,\n        value = fieldProps.value;\n    var momentValue = parseValueToMoment(value, finalFormat);\n\n    if (light) {\n      var valueStr = momentValue && momentValue.format(finalFormat) || '';\n      _dom = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-light\"),\n        onClick: function onClick() {\n          setOpen(true);\n        }\n      }, /*#__PURE__*/React.createElement(_TimePicker, _extends({\n        value: momentValue,\n        format: format,\n        ref: ref\n      }, fieldProps, {\n        onChange: function onChange(v) {\n          _onChange === null || _onChange === void 0 ? void 0 : _onChange(v);\n          setTimeout(function () {\n            setOpen(false);\n          }, 0);\n        },\n        onOpenChange: setOpen,\n        open: open\n      })), /*#__PURE__*/React.createElement(FieldLabel, {\n        label: label,\n        disabled: disabled,\n        placeholder: placeholder,\n        size: size,\n        value: valueStr,\n        allowClear: allowClear,\n        onClear: function onClear() {\n          _onChange === null || _onChange === void 0 ? void 0 : _onChange(null);\n        },\n        expanded: open\n      }));\n    } else {\n      _dom = /*#__PURE__*/React.createElement(_DatePicker.TimePicker, _extends({\n        ref: ref,\n        format: format,\n        bordered: plain === undefined ? true : !plain\n      }, fieldProps, {\n        value: momentValue\n      }));\n    }\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom);\n    }\n\n    return _dom;\n  }\n\n  return null;\n};\n/**\n * 时间区间选择\n *\n * @param param0\n * @param ref\n */\n\n\nvar FieldTimeRangePicker = function FieldTimeRangePicker(_ref2) {\n  var text = _ref2.text,\n      mode = _ref2.mode,\n      format = _ref2.format,\n      render = _ref2.render,\n      renderFormItem = _ref2.renderFormItem,\n      plain = _ref2.plain,\n      fieldProps = _ref2.fieldProps;\n\n  var _ref3 = Array.isArray(text) ? text : [],\n      _ref4 = _slicedToArray(_ref3, 2),\n      startText = _ref4[0],\n      endText = _ref4[1];\n\n  var parsedStartText = startText ? moment(startText).format((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || 'YYYY-MM-DD') : '';\n  var parsedEndText = endText ? moment(endText).format((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || 'YYYY-MM-DD') : '';\n\n  if (mode === 'read') {\n    var dom = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", null, parsedStartText || '-'), /*#__PURE__*/React.createElement(\"div\", null, parsedEndText || '-'));\n\n    if (render) {\n      return render(text, _objectSpread({\n        mode: mode\n      }, fieldProps), /*#__PURE__*/React.createElement(\"span\", null, dom));\n    }\n\n    return dom;\n  }\n\n  if (mode === 'edit' || mode === 'update') {\n    var value = fieldProps.value;\n    var momentValue = parseValueToMoment(value);\n\n    var _dom2 = /*#__PURE__*/React.createElement(_TimePicker.RangePicker, _extends({\n      format: format,\n      bordered: plain === undefined ? true : !plain\n    }, fieldProps, {\n      value: momentValue\n    }));\n\n    if (renderFormItem) {\n      return renderFormItem(text, _objectSpread({\n        mode: mode\n      }, fieldProps), _dom2);\n    }\n\n    return _dom2;\n  }\n\n  return null;\n};\n\nexport { FieldTimeRangePicker };\nexport default /*#__PURE__*/React.forwardRef(FieldTimePicker);"]},"metadata":{},"sourceType":"module"}